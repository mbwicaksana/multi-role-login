openapi: 3.0.0
info:
  title: Auth and Product API
  description: API for managing authentication and products
  version: 1.0.0
paths:
  # Auth Endpoints
  /login:
    post:
      summary: Authenticates a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        200:
          description: User information and session token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /logout:
    delete:
      summary: Logs out a user
      responses:
        200:
          description: Success message
          content:
            application/json:
              schema:
                type: string
  /me:
    get:
      summary: Retrieves information about the logged-in user
      responses:
        200:
          description: User information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  # Product Endpoints
  /products:
    get:
      summary: Retrieves a list of products
      responses:
        200:
          description: Array of products
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
    post:
      summary: Creates a new product
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                price:
                  type: integer
      responses:
        201:
          description: Newly created product
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
  /products/{id}:
    get:
      summary: Retrieves a single product by its ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: Product details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
    patch:
      summary: Updates an existing product
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                price:
                  type: integer
      responses:
        200:
          description: Updated product
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
    delete:
      summary: Deletes a product
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: Success message
          content:
            application/json:
              schema:
                type: string
components:
  schemas:
    User:
      type: object
      properties:
        uuid:
          type: string
        name:
          type: string
        email:
          type: string
        role:
          type: string
    Product:
      type: object
      properties:
        uuid:
          type: string
        name:
          type: string
        price:
          type: integer
security:
  - session: [ ]
